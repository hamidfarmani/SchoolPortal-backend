# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/schooldb
spring.datasource.username=root
spring.datasource.password=hamid123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
server.port=7585

#security.oauth2.client.clientId = 626004476039-1t97skhlfu8d232m7mnl24lcdvfch8v1.apps.googleusercontent.com
#security.oauth2.client.clientSecret = LxSYMKOcCZp83594dpI2mmsF
#security.oauth2.client.accessTokenUri  =  https://www.googleapis.com/oauth2/v3/token
#security.oauth2.client.userAuthorizationUri  =  https://accounts.google.com/o/oauth2/auth
#security.oauth2.client.tokenName = oauth_token
#security.oauth2.client.authenticationScheme = query
#security.oauth2.client.clientAuthenticationScheme = form
#security.oauth2.client.scope = profile email
#security.oauth2.resource.userInfoUri  =  https://www.googleapis.com/userinfo/v2/me
#security.oauth2.resource.preferTokenInfo = false